<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Mon Mar 12 10:03:13 EDT 2012 -->
<TITLE>
PolygonMap
</TITLE>

<META NAME="date" CONTENT="2012-03-12">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="PolygonMap";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../GlobalNavigation/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../GlobalNavigation/OdometryListener.html" title="class in GlobalNavigation"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?GlobalNavigation/PolygonMap.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PolygonMap.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
GlobalNavigation</FONT>
<BR>
Class PolygonMap</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>GlobalNavigation.PolygonMap</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>PolygonMap</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<p>The 2D <A HREF="../GlobalNavigation/PolygonMap.html#worldRect"><CODE>worldRect</CODE></A>, <A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation"><CODE>PolygonObstacle</CODE></A> <A HREF="../GlobalNavigation/PolygonMap.html#obstacles"><CODE>obstacles</CODE></A>,
 <A HREF="../GlobalNavigation/PolygonMap.html#robotStart"><CODE>robotStart</CODE></A>, and <A HREF="../GlobalNavigation/PolygonMap.html#robotGoal"><CODE>robotGoal</CODE></A> that
 make-up the environment in which the robot will navigate.</p>

 <p>You can either make an instance of this class and use it from within your
 own program (typical usage), or you can run this code as an indepedent
 process (see <CODE>#main</CODE>).  The latter mode allows you to display the
 contents of a map file, but does not give programmatic access to those
 contents, and thus is useful mostly for displaying/debugging map
 files.</p>.

 <p>The format of the map file is as follows (all items are signed doubles in
 ASCII text format, all units are meters, and all separators are whitespace):
 <pre>
 robotStartX robotStartY
 robotGoalX robotGoalY
 worldX worldY worldWidth worldHeight
 obstacle0X0 obstacle0Y0 obstacle0X1 obstacle0Y1 ...
 ...
 </pre>
 The first three lines initialize the corresponding instance fields <A HREF="../GlobalNavigation/PolygonMap.html#robotStart"><CODE>robotStart</CODE></A>, <A HREF="../GlobalNavigation/PolygonMap.html#robotGoal"><CODE>robotGoal</CODE></A>, and <A HREF="../GlobalNavigation/PolygonMap.html#worldRect"><CODE>worldRect</CODE></A>, respectively.  Each obstacle line gives the coordinates of the
 obstacle's vertices in CCW order.  There may be zero obstacles.</p>
<P>

<P>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#APPNAME">APPNAME</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name to use when run as an application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.util.LinkedList&lt;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#obstacles">obstacles</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The obstacles (does not include the world boundary).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.geom.Point2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#robotGoal">robotGoal</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The goal point for the robot origin, read in from the map file (m).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.geom.Point2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#robotStart">robotStart</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The start point for the robot origin, read in from the map file
 (m).</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.awt.geom.Rectangle2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#worldRect">worldRect</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;The location and size of the world boundary, read in from the map file
 (m).</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#PolygonMap()">PolygonMap</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new un-initialized polygon map.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#PolygonMap(java.io.File)">PolygonMap</A></B>(java.io.File&nbsp;mapFile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a new map, parsing <code>mapFile</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#PolygonMap(java.lang.String)">PolygonMap</A></B>(java.lang.String&nbsp;mapFile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Covers <A HREF="../GlobalNavigation/PolygonMap.html#PolygonMap(java.io.File)"><CODE>PolygonMap(File)</CODE></A>.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#driverDisplayHook()">driverDisplayHook</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hook called after painting map objects in <A HREF="../GlobalNavigation/PolygonMap.html#instanceMain(java.lang.String)"><CODE>instanceMain(java.lang.String)</CODE></A> to
 allow subclasses to display extra stuff.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getAppName()">getAppName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the application name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;GraphName</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getDefaultNodeName()">getDefaultNodeName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getObstacles()">getObstacles</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get <A HREF="../GlobalNavigation/PolygonMap.html#obstacles"><CODE>obstacles</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.geom.Point2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getRobotGoal()">getRobotGoal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get <A HREF="../GlobalNavigation/PolygonMap.html#robotGoal"><CODE>robotGoal</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.geom.Point2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getRobotStart()">getRobotStart</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get <A HREF="../GlobalNavigation/PolygonMap.html#robotStart"><CODE>robotStart</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.awt.geom.Rectangle2D.Double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#getWorldRect()">getWorldRect</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get <A HREF="../GlobalNavigation/PolygonMap.html#worldRect"><CODE>worldRect</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#instanceMain(java.lang.String)">instanceMain</A></B>(java.lang.String&nbsp;mapFile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses the specified map file, prints it out, and displays it in the
 GUI, if any.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#onShutdown(Node)">onShutdown</A></B>(Node&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shutdown hook for ROS when called as stand-alone node</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#onShutdownComplete(Node)">onShutdownComplete</A></B>(Node&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#onStart(Node)">onStart</A></B>(Node&nbsp;node)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Entry hook for ROS when called as stand-alone node</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parse(java.io.File)">parse</A></B>(java.io.File&nbsp;mapFile)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse <code>mapFile</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;double</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parseDouble(java.io.BufferedReader, java.lang.String, int)">parseDouble</A></B>(java.io.BufferedReader&nbsp;br,
            java.lang.String&nbsp;name,
            int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse a <code>double</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parseExtra(java.io.BufferedReader, int)">parseExtra</A></B>(java.io.BufferedReader&nbsp;br,
           int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hook called from <A HREF="../GlobalNavigation/PolygonMap.html#parse(java.io.File)"><CODE>parse(java.io.File)</CODE></A> after the first four lines are parsed
 to allow subclasses to parse extra lines before the obstacles.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parseObs(java.io.BufferedReader, java.lang.String, int)">parseObs</A></B>(java.io.BufferedReader&nbsp;br,
         java.lang.String&nbsp;name,
         int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse a <A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation"><CODE>PolygonObstacle</CODE></A>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parsePoint(java.awt.geom.Point2D.Double, java.io.BufferedReader, java.lang.String, int)">parsePoint</A></B>(java.awt.geom.Point2D.Double&nbsp;point,
           java.io.BufferedReader&nbsp;br,
           java.lang.String&nbsp;name,
           int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse a <code>Point2D.Double</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#parseRect(java.awt.geom.Rectangle2D.Double, java.io.BufferedReader, java.lang.String, int)">parseRect</A></B>(java.awt.geom.Rectangle2D.Double&nbsp;rect,
          java.io.BufferedReader&nbsp;br,
          java.lang.String&nbsp;name,
          int&nbsp;lineNumber)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parse a <code>Rectangle2D.Double</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../GlobalNavigation/PolygonMap.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a human-readable string representation of this map.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="APPNAME"><!-- --></A><H3>
APPNAME</H3>
<PRE>
public static final java.lang.String <B>APPNAME</B></PRE>
<DL>
<DD><p>Name to use when run as an application.</p>
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../constant-values.html#GlobalNavigation.PolygonMap.APPNAME">Constant Field Values</A></DL>
</DL>
<HR>

<A NAME="robotStart"><!-- --></A><H3>
robotStart</H3>
<PRE>
protected java.awt.geom.Point2D.Double <B>robotStart</B></PRE>
<DL>
<DD><p>The start point for the robot origin, read in from the map file
 (m).</p>
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="robotGoal"><!-- --></A><H3>
robotGoal</H3>
<PRE>
protected java.awt.geom.Point2D.Double <B>robotGoal</B></PRE>
<DL>
<DD><p>The goal point for the robot origin, read in from the map file (m).</p>
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="worldRect"><!-- --></A><H3>
worldRect</H3>
<PRE>
protected java.awt.geom.Rectangle2D.Double <B>worldRect</B></PRE>
<DL>
<DD><p>The location and size of the world boundary, read in from the map file
 (m).</p>
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="obstacles"><!-- --></A><H3>
obstacles</H3>
<PRE>
protected java.util.LinkedList&lt;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A>&gt; <B>obstacles</B></PRE>
<DL>
<DD><p>The obstacles (does not include the world boundary).</p>
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="PolygonMap(java.io.File)"><!-- --></A><H3>
PolygonMap</H3>
<PRE>
public <B>PolygonMap</B>(java.io.File&nbsp;mapFile)
           throws java.io.IOException,
                  java.text.ParseException</PRE>
<DL>
<DD><p>Create a new map, parsing <code>mapFile</code>.</p>
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>mapFile</CODE> - the map file to parse, or null if none
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>java.text.ParseException</CODE></DL>
</DL>
<HR>

<A NAME="PolygonMap(java.lang.String)"><!-- --></A><H3>
PolygonMap</H3>
<PRE>
public <B>PolygonMap</B>(java.lang.String&nbsp;mapFile)
           throws java.io.IOException,
                  java.text.ParseException</PRE>
<DL>
<DD><p>Covers <A HREF="../GlobalNavigation/PolygonMap.html#PolygonMap(java.io.File)"><CODE>PolygonMap(File)</CODE></A>.</p>
<P>
<DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>java.text.ParseException</CODE></DL>
</DL>
<HR>

<A NAME="PolygonMap()"><!-- --></A><H3>
PolygonMap</H3>
<PRE>
public <B>PolygonMap</B>()</PRE>
<DL>
<DD><p>Create a new un-initialized polygon map.</p>

 <p>You may populate it using the accessors below.</p>
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="parseDouble(java.io.BufferedReader, java.lang.String, int)"><!-- --></A><H3>
parseDouble</H3>
<PRE>
protected double <B>parseDouble</B>(java.io.BufferedReader&nbsp;br,
                             java.lang.String&nbsp;name,
                             int&nbsp;lineNumber)
                      throws java.io.IOException,
                             java.text.ParseException,
                             java.lang.NumberFormatException</PRE>
<DL>
<DD><p>Parse a <code>double</code>.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>br</CODE> - the double is expected to be on the next line of this reader<DD><CODE>name</CODE> - the name of the double<DD><CODE>lineNumber</CODE> - the line number of the double
<DT><B>Returns:</B><DD>the parsed double
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there was an I/O error
<DD><CODE>java.text.ParseException</CODE> - if there was a format error
<DD><CODE>java.lang.NumberFormatException</CODE> - if there was a format error</DL>
</DD>
</DL>
<HR>

<A NAME="parsePoint(java.awt.geom.Point2D.Double, java.io.BufferedReader, java.lang.String, int)"><!-- --></A><H3>
parsePoint</H3>
<PRE>
protected void <B>parsePoint</B>(java.awt.geom.Point2D.Double&nbsp;point,
                          java.io.BufferedReader&nbsp;br,
                          java.lang.String&nbsp;name,
                          int&nbsp;lineNumber)
                   throws java.io.IOException,
                          java.text.ParseException,
                          java.lang.NumberFormatException</PRE>
<DL>
<DD><p>Parse a <code>Point2D.Double</code>.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>point</CODE> - the returned point<DD><CODE>br</CODE> - the point is expected to be on the next line of this reader<DD><CODE>name</CODE> - the name of the point<DD><CODE>lineNumber</CODE> - the line number of the point
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there was an I/O error
<DD><CODE>java.text.ParseException</CODE> - if there was a format error
<DD><CODE>java.lang.NumberFormatException</CODE> - if there was a format error</DL>
</DD>
</DL>
<HR>

<A NAME="parseRect(java.awt.geom.Rectangle2D.Double, java.io.BufferedReader, java.lang.String, int)"><!-- --></A><H3>
parseRect</H3>
<PRE>
protected void <B>parseRect</B>(java.awt.geom.Rectangle2D.Double&nbsp;rect,
                         java.io.BufferedReader&nbsp;br,
                         java.lang.String&nbsp;name,
                         int&nbsp;lineNumber)
                  throws java.io.IOException,
                         java.text.ParseException,
                         java.lang.NumberFormatException</PRE>
<DL>
<DD><p>Parse a <code>Rectangle2D.Double</code>.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>rect</CODE> - the returned rectangle<DD><CODE>br</CODE> - the rect is expected to be on the next line of this reader<DD><CODE>name</CODE> - the name of the rect<DD><CODE>lineNumber</CODE> - the line number of the rect
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there was an I/O error
<DD><CODE>java.text.ParseException</CODE> - if there was a format error
<DD><CODE>java.lang.NumberFormatException</CODE> - if there was a format error</DL>
</DD>
</DL>
<HR>

<A NAME="parseObs(java.io.BufferedReader, java.lang.String, int)"><!-- --></A><H3>
parseObs</H3>
<PRE>
protected <A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A> <B>parseObs</B>(java.io.BufferedReader&nbsp;br,
                                   java.lang.String&nbsp;name,
                                   int&nbsp;lineNumber)
                            throws java.io.IOException,
                                   java.text.ParseException,
                                   java.lang.NumberFormatException</PRE>
<DL>
<DD><p>Parse a <A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation"><CODE>PolygonObstacle</CODE></A>.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>br</CODE> - the polygon is expected to be on the next line of this reader<DD><CODE>name</CODE> - the name of the polygon<DD><CODE>lineNumber</CODE> - the line number of the polygon
<DT><B>Returns:</B><DD>a new polygon containing the vertices on the line, or null if
 there was no line
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there was an I/O error
<DD><CODE>java.text.ParseException</CODE> - if there was a format error
<DD><CODE>java.lang.NumberFormatException</CODE> - if there was a format error</DL>
</DD>
</DL>
<HR>

<A NAME="parseExtra(java.io.BufferedReader, int)"><!-- --></A><H3>
parseExtra</H3>
<PRE>
protected boolean <B>parseExtra</B>(java.io.BufferedReader&nbsp;br,
                             int&nbsp;lineNumber)
                      throws java.io.IOException,
                             java.text.ParseException,
                             java.lang.NumberFormatException</PRE>
<DL>
<DD><p>Hook called from <A HREF="../GlobalNavigation/PolygonMap.html#parse(java.io.File)"><CODE>parse(java.io.File)</CODE></A> after the first four lines are parsed
 to allow subclasses to parse extra lines before the obstacles.</p>

 <p>Default impl just returns false.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>br</CODE> - the next line of this reader is the next to be parsed<DD><CODE>lineNumber</CODE> - the line number of the next line of br
<DT><B>Returns:</B><DD>true if the line was parsed and more are expected, false if no
 more extra lines are expected
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE> - if there was an I/O error
<DD><CODE>java.text.ParseException</CODE> - if there was a format error
<DD><CODE>java.lang.NumberFormatException</CODE> - if there was a format error</DL>
</DD>
</DL>
<HR>

<A NAME="parse(java.io.File)"><!-- --></A><H3>
parse</H3>
<PRE>
protected void <B>parse</B>(java.io.File&nbsp;mapFile)
              throws java.io.IOException,
                     java.text.ParseException</PRE>
<DL>
<DD><p>Parse <code>mapFile</code>.</p>

 <p>Format is specified in the class header doc for <A HREF="../GlobalNavigation/PolygonMap.html" title="class in GlobalNavigation"><CODE>PolygonMap</CODE></A>.</p>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>mapFile</CODE> - the map file, not null
<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE>
<DD><CODE>java.text.ParseException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getRobotStart()"><!-- --></A><H3>
getRobotStart</H3>
<PRE>
public java.awt.geom.Point2D.Double <B>getRobotStart</B>()</PRE>
<DL>
<DD><p>Get <A HREF="../GlobalNavigation/PolygonMap.html#robotStart"><CODE>robotStart</CODE></A>.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a reference to <code>robotStart</code> (you may modify it)</DL>
</DD>
</DL>
<HR>

<A NAME="getRobotGoal()"><!-- --></A><H3>
getRobotGoal</H3>
<PRE>
public java.awt.geom.Point2D.Double <B>getRobotGoal</B>()</PRE>
<DL>
<DD><p>Get <A HREF="../GlobalNavigation/PolygonMap.html#robotGoal"><CODE>robotGoal</CODE></A>.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a reference to <code>robotGoal</code> (you may modify it)</DL>
</DD>
</DL>
<HR>

<A NAME="getWorldRect()"><!-- --></A><H3>
getWorldRect</H3>
<PRE>
public java.awt.geom.Rectangle2D.Double <B>getWorldRect</B>()</PRE>
<DL>
<DD><p>Get <A HREF="../GlobalNavigation/PolygonMap.html#worldRect"><CODE>worldRect</CODE></A>.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a reference to <code>worldRect</code> (you may modify it)</DL>
</DD>
</DL>
<HR>

<A NAME="getObstacles()"><!-- --></A><H3>
getObstacles</H3>
<PRE>
public java.util.List&lt;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation">PolygonObstacle</A>&gt; <B>getObstacles</B>()</PRE>
<DL>
<DD><p>Get <A HREF="../GlobalNavigation/PolygonMap.html#obstacles"><CODE>obstacles</CODE></A>.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>a reference to <code>obstacles</code> (you may modify it)</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD><p>Return a human-readable string representation of this map.</p>
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a human-readable string representation of this map</DL>
</DD>
</DL>
<HR>

<A NAME="instanceMain(java.lang.String)"><!-- --></A><H3>
instanceMain</H3>
<PRE>
protected void <B>instanceMain</B>(java.lang.String&nbsp;mapFile)</PRE>
<DL>
<DD><p>Parses the specified map file, prints it out, and displays it in the
 GUI, if any.</p>

 <p>Usage: <A HREF="../GlobalNavigation/PolygonMap.html#getAppName()"><CODE>getAppName()</CODE></A> &lt;mapfile&gt; [centralhost]</p>
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getAppName()"><!-- --></A><H3>
getAppName</H3>
<PRE>
protected java.lang.String <B>getAppName</B>()</PRE>
<DL>
<DD><p>Get the application name.</p>
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the application name</DL>
</DD>
</DL>
<HR>

<A NAME="driverDisplayHook()"><!-- --></A><H3>
driverDisplayHook</H3>
<PRE>
protected void <B>driverDisplayHook</B>()</PRE>
<DL>
<DD><p>Hook called after painting map objects in <A HREF="../GlobalNavigation/PolygonMap.html#instanceMain(java.lang.String)"><CODE>instanceMain(java.lang.String)</CODE></A> to
 allow subclasses to display extra stuff.</p>

 <p>Default impl does nothing.</p>
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onShutdown(Node)"><!-- --></A><H3>
onShutdown</H3>
<PRE>
public void <B>onShutdown</B>(Node&nbsp;node)</PRE>
<DL>
<DD>Shutdown hook for ROS when called as stand-alone node
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onStart(Node)"><!-- --></A><H3>
onStart</H3>
<PRE>
public void <B>onStart</B>(Node&nbsp;node)</PRE>
<DL>
<DD>Entry hook for ROS when called as stand-alone node
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onShutdownComplete(Node)"><!-- --></A><H3>
onShutdownComplete</H3>
<PRE>
public void <B>onShutdownComplete</B>(Node&nbsp;node)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getDefaultNodeName()"><!-- --></A><H3>
getDefaultNodeName</H3>
<PRE>
public GraphName <B>getDefaultNodeName</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../GlobalNavigation/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../GlobalNavigation/OdometryListener.html" title="class in GlobalNavigation"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../GlobalNavigation/PolygonObstacle.html" title="class in GlobalNavigation"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?GlobalNavigation/PolygonMap.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="PolygonMap.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
